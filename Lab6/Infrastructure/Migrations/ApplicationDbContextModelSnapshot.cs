// <auto-generated />
using System;
using Lab6.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab6.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab6.Domain.Entities.MailingListEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailingLists");
                });

            modelBuilder.Entity("Lab6.Domain.Entities.MailingListSubscriberEntity", b =>
                {
                    b.Property<Guid>("MailingListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastSentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MailingListId", "SubscriberId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("MailingListSubscribers");
                });

            modelBuilder.Entity("Lab6.Domain.Entities.SubscriberEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("Lab6.Domain.Entities.MailingListSubscriberEntity", b =>
                {
                    b.HasOne("Lab6.Domain.Entities.MailingListEntity", "MailingList")
                        .WithMany("MailingListSubscribers")
                        .HasForeignKey("MailingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Domain.Entities.SubscriberEntity", "Subscriber")
                        .WithMany("MailingListSubscribers")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailingList");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("Lab6.Domain.Entities.MailingListEntity", b =>
                {
                    b.Navigation("MailingListSubscribers");
                });

            modelBuilder.Entity("Lab6.Domain.Entities.SubscriberEntity", b =>
                {
                    b.Navigation("MailingListSubscribers");
                });
#pragma warning restore 612, 618
        }
    }
}
